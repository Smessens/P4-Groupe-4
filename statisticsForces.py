#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Apr 17 06:49:07 2021

@author: JulianBelotti
"""

import numpy as np
from scipy import stats

arr1 = [9.5, 11, 11, 10.5, 11]
arr2 = [9.5, 9, 10, 9, 8.5]
arr3 = [9.5, 9, 11, 9, 11]
arr4 = [19, 22, 22, 21, 22]

SECVUP = [8.84898894, 9.38408849, 10.00257279, 7.159153822]
SEFUP = [8.702948364, 8.338520413, 9.274698496, 7.017903124]
EHUP = [20.96475031, 12.01069969, 12.42718742, 13.43630521]
EBUP = [14.76494878, 9.323454912, 9.561645119, 15.8920525]

SECVDOWN = [9.14097365, 9.510305298, 9.29512317, 7.302516614]
SEFDOWN = [7.183287711, 9.791070116, 10.6822477, 7.399769888]
EHDOWN = [15.9139846, 11.56234564, 10.13287013, 12.51337835]
EBDOWN = [9.958285369, 8.300168739, 8.790734636, 10.44276115]

SECVRUP = [11.50972456, 10.19930461, 12.97598207, 9.264205071]
SEFRUP = [10.25830437, 9.103526781, 13.28539429, 7.848004883]
EHRUP = [15.36982663, 13.72106279, 13.98290533, 11.01516796]
EBRUP = [15.93129996, 13.05104668, 16.31885375, 9.746792823]

SECVRDOWN = [12.67573746, 8.63643242, 15.08755523, 10.8719462]
SEFRDOWN = [9.046052123, 10.40932307, 11.21959917, 7.13922512]
EHRDOWN = [13.60225087, 13.24505838, 14.02226815, 10.09312117]
EBRDOWN = [16.4434393, 10.45902418, 15.51076592, 9.529586823]

SECV = [8.84898894, 9.38408849, 10.00257279, 7.159153822, 9.14097365, 9.510305298, 9.29512317, 7.302516614]
SEF = [8.702948364, 8.338520413, 9.274698496, 7.017903124, 7.183287711, 9.791070116, 10.6822477, 7.399769888]
EH = [20.96475031, 12.01069969, 12.42718742, 13.43630521, 15.9139846, 11.56234564, 10.13287013, 12.51337835] 
EB = [14.76494878, 9.323454912, 9.561645119, 15.8920525, 9.958285369, 8.300168739, 8.790734636, 10.44276115]

SECVR = [11.50972456, 10.19930461, 12.97598207, 9.264205071, 12.67573746, 8.63643242, 15.08755523, 10.8719462]
SEFR = [10.25830437, 9.103526781, 13.28539429, 7.848004883, 9.046052123, 10.40932307, 11.21959917, 7.13922512]
EHR = [15.36982663, 13.72106279, 13.98290533, 11.01516796, 13.60225087, 13.24505838, 14.02226815, 10.09312117]
EBR = [15.93129996, 13.05104668, 16.31885375, 9.746792823, 16.4434393, 10.45902418, 15.51076592, 9.529586823]

Julian = [8.84898894, 8.702948364, 20.96475031, 14.76494878, 9.14097365, 7.183287711, 15.9139846, 9.958285369, 11.50972456, 10.25830437, 15.36982663, 15.93129996, 12.67573746, 9.046052123, 13.60225087, 16.4434393]
Julien = [9.38408849, 8.338520413, 12.01069969, 9.323454912, 9.510305298, 9.791070116, 11.56234564, 8.300168739, 10.19930461, 9.103526781, 13.72106279, 13.05104668, 8.63643242, 10.40932307, 13.24505838, 10.45902418]
Simon = [10.00257279, 9.274698496, 12.42718742, 9.561645119, 9.29512317, 10.6822477, 10.13287013, 8.790734636, 12.97598207, 13.28539429, 13.98290533, 16.31885375, 15.08755523, 11.21959917, 14.02226815, 15.51076592]
Sophie = [7.159153822, 7.017903124, 13.43630521, 15.8920525, 7.302516614, 7.399769888, 12.51337835, 10.44276115, 9.264205071, 7.848004883, 11.01516796, 9.746792823, 10.8719462, 7.13922512, 10.09312117, 9.529586823]


MaxSECVUP = [10.23439006, 10.62198726, 14.27380933, 7.967650228]
MaxSEFUP = [11.19132868, 9.318039857, 12.24205933, 11.02393288]
MaxEHUP = [23.92225808, 14.12513365, 18.02608845, 19.61371061]
MaxEBUP = [19.89803538, 11.40087239, 12.67150423, 20.61160437]

MaxSECVDOWN = [12.24889449, 11.02331646, 13.04140191, 8.882098716]
MaxSEFDOWN = [8.69945277, 11.01141405, 13.43019404, 10.45790304]
MaxEHDOWN = [23.51005309, 15.6526829, 13.87556592, 19.61371061]
MaxEBDOWN = [14.84207203, 1]

#MOYENNE
#mean1 = np.mean(arr1)
#mean2 = np.mean(arr2)
#mean3 = np.mean(arr3)
#print(mean1, mean2, mean3)

#ECART TYPE
#std1 = np.std(arr1)
#std2 = np.std(arr2)
#std3 = np.std(arr3)
#print(std1, std2, std3)

#T-TEST
(tvalue0,pvalue0) = stats.ttest_ind(SECV, SECVR, equal_var=False)
print(tvalue0,pvalue0)

#(tvalue1,pvalue1) = stats.ttest_1samp(arr1,10.5)
#print(tvalue1,pvalue1)

#(tvalue2,pvalue2) = stats.ttest_rel(arr1,arr2)
#print(tvalue2,pvalue2)

#ANOVA
#(fstat,pvalue) = stats.f_oneway(SEF,EH,EB)
#print(fstat,pvalue)



#POST HOC
#apres anova, comparer series 2 a 2. Seuil = seuil/Nseries

#CORRELATION, (dependance lineaire entre 2 variables) (correlation, pvalue)
#correlation = stats.pearsonr(arr1,arr4)
#print(correlation)



